from dis import dis
import telebot
from telebot import types
import keyboards as kb
from config import token
import re #–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä –∏ –¥—Ä. https://tproger.ru/translations/regular-expression-python/
import pymysql.cursors
from adds import connect
from connection import register
bot = telebot.TeleBot(token)
connection = connect()
import math
#reg_c = 0 #–°—Ç–∞—Ç—É—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ—Ç

districts = ["–ó–∞–≤–æ–¥—Å–∫–æ–π", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "–°–æ–≤–µ—Ç—Å–∫–∏–π", 
"–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π", "–ü–∞—Ä—Ç–∏–∑–∞–Ω—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π", 
"–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"]
actions = ["–ë–∞—Å–∫–µ—Ç–±–æ–ª","–í–æ–ª–µ–π–±–æ–ª","–§—É—Ç–±–æ–ª","–ë–µ–≥","–†–æ–ª–∏–∫–∏","–í–µ–ª–æ—Å–∏–ø–µ–¥","–í–æ—Ä–∫–∞—É—Ç"]
# cursor.execute –≤ def



def execute(user_id,what):
    try:
        with connection.cursor() as cursor:
            cursor.execute ( f"SELECT `{what}` FROM `tbot` WHERE `user_id`={user_id}" )
            qq = cursor.fetchone ()
            for o , p in qq.items () :
                name = p
            return name
    except:
        execute(user_id,what)
#def update(user_id,what,num):
 #   with connection.cursor() as cursor:
  #      cursor.execute ( f"UPDATE `tbot` SET `{what}`={num} WHERE `user_id`={user_id}" )
#        connection.commit()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler ( commands=[ 'start' ] )
def comm_start(message) :

    user_id = message.chat.id
    print ( user_id )
    with connection.cursor() as cursor:
        reg = cursor.execute(f"SELECT * FROM tbot WHERE user_id={user_id}")
        if reg == 0:
            msg = bot.send_message ( user_id ,"–ü—Ä–∏–≤–µ—Ç —á–µ–ª–æ–≤–µ–∫, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∫–æ–º–ø–∞–Ω–∏—é. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏." ,reply_markup = kb.reg_keyboard )
            bot.register_next_step_handler ( msg , reg_or_no )
            register(user_id)
        else:
            msg = bot.send_message ( user_id, "–¢—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ? –î–∞/–ù–µ—Ç", reply_markup = kb.reg_yes_or_no)
            bot.register_next_step_handler( msg, yes_or_no )

def yes_or_no(message):
    user_id = message.chat.id
    text = message.text
    if text == '–î–∞':
        msg = bot.send_message ( user_id ,"–¢–æ–≥–¥–∞ –¥–∞–≤–∞–π –∑–∞–Ω–æ–≤–æ –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –ø—Ä–æ —Ç–µ–±—è. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏." , reply_markup = kb.reg_keyboard )
        bot.register_next_step_handler ( msg , reg_or_no )
    elif text == '–ù–µ—Ç':
        msg = bot.send_message ( user_id , "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å." , reply_markup=kb.mein_meny_keybord )
        bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
    else:
        msg = bot.send_message ( user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ (–î–∞/–ù–µ—Ç)", reply_markup = kb.reg_yes_or_no )
        bot.register_next_step_handler( msg, yes_or_no)

def reg_or_no(message):
    user_id = message.chat.id
    text = message.text
    if text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        reg(user_id)

    else:
        msg = bot.send_message( user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'.")
        bot.register_next_step_handler(msg, reg_or_no)

def reg(user_id):
    # –î–∞–±–∞–≤–ª—è–º –≤ –¥–± id
    msg = bot.send_message ( user_id , "–í–≤–µ–¥–∏ –∏–º—è (1/3)" )
    bot.register_next_step_handler ( msg , get_name )

def get_name(message):
    name = message.text
    print ( str ( name ) ) #–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ (–ò–º—è)
    user_id = message.chat.id
    result = re.findall(r'\d', str(name))
    if result != [] or '/' in str(name):
        msg = bot.send_message( user_id, "–í–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã! –í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ")
        bot.register_next_step_handler ( msg, get_name )
    else:
        # –î–∞–±–∞–≤–ª—è–µ–º –≤ bd –∏–º—è
        msg = bot.send_message ( user_id , "–í–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é (2/3)" )
        bot.register_next_step_handler ( msg , get_surname )
        with connection.cursor() as cursor:
            cursor.execute ( f"UPDATE tbot SET name='{name}' WHERE user_id={user_id}" )
            connection.commit ()





def get_surname(message) :
    surname = message.text
    print ( str ( surname ) ) #–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ (–§–∞–º–∏–ª–∏—è)
    result = re.findall(r'\d', str(surname))
    user_id = message.chat.id
    if result != []:
        msg = bot.send_message( user_id, "–í–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã! –í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ")
        bot.register_next_step_handler ( msg, get_surname )
    else:
        # –î–∞–±–∞–≤–ª—è–µ–º –≤ bd —Ñ–∞–º–∏–ª–∏—é
        with connection.cursor() as cursor:
            cursor.execute(f"UPDATE tbot SET surname='{surname}' WHERE user_id={user_id}")
            connection.commit()
        msg = bot.send_message ( user_id , "–í–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç (3/3)" )
        bot.register_next_step_handler ( msg , get_age )


def get_age(message) :
    username = message.chat.username
    age = message.text
    print ( str ( age ) ) #–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ (–í–æ–∑—Ä–∞—Å—Ç)
    user_id = message.chat.id
    result = re.findall( r'\D', age)
    if result != [] or int(age)<0 or int(age)>99:
        msg = bot.send_message( user_id, "–í–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã! –í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ")
        bot.register_next_step_handler ( msg, get_age )
    else:
    # –î–∞–±–∞–≤–ª—è–µ–º –≤ bd –≤–æ–∑—Ä–∞—Å—Ç
        with connection.cursor() as cursor:
            cursor.execute(f"UPDATE `tbot` SET `age`={age},`reg`=1, `username`='{str(username)}' WHERE `user_id`={user_id}")
            connection.commit()
        msg = bot.send_message ( user_id , "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å.",reply_markup = kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, reaction_mein_menu_buttons)


#################################################################################################################
########## –í–°–ï –°–í–Ø–ó–ê–ù–ù–û–ï –° –ú–ï–ù–Æ #################################################################################
#################################################################################################################


@bot.message_handler( commands = ['menu'] )

def reaction_mein_menu_buttons(message):
    user_id = message.chat.id
    text = message.text
    if text == '–ù–∞–π—Ç–∏ –≥—Ä—É–ø–ø—É üîç' :
        find_group(user_id)

    elif text == '–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É ‚ûï' :
        make_group(user_id)
    
    else:
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫!",
        reply_markup = kb.mein_meny_keybord)
        bot.register_next_step_handler( msg, reaction_mein_menu_buttons)


#################################################################################################################
######################################### –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã #######################################################
#################################################################################################################


def make_group(user_id): #–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏ —Ä–∞–π–æ–Ω –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏ \ –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ: –ù–∞–∑–∞–¥",
    reply_markup = kb.distr_keybord)
    bot.register_next_step_handler(msg, get_dist)

def get_dist(message):
    text = message.text
    user_id = message.chat.id
    if text in districts:
        with connection.cursor () as cursor : #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω
            col = 0
            for i in districts:
                col =+ 1
                if text == i:
                    cursor.execute(f"UPDATE `tbot` SET `group`={col} WHERE `user_id`={user_id}")
            connection.commit ()

        msg = bot.send_message( user_id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏")
        bot.register_next_step_handler_by_chat_id(user_id , get_geopos)
    elif text == "–ù–∞–∑–∞–¥": #–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é
        msg = bot.send_message( user_id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é" , reply_markup = kb.mein_meny_keybord)
        bot.register_next_step_handler( msg, reaction_mein_menu_buttons)
    else: #–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª –Ω–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ
        msg = bot.send_message( user_id, "–ù–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –≤—ã–π–¥–∏ –≤ –º–µ–Ω—é" , 
        reply_markup = kb.distr_keybord)
        bot.register_next_step_handler( msg, get_dist)

def get_geopos(Location): #–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è
    user_id = Location.chat.id
    try:
        loc = Location.location
        plong = Location.location.longitude
        plat = Location.location.latitude
        with connection.cursor () as cursor :
            cursor.execute ( f"UPDATE tbot SET plong={plong},plat={plat} WHERE user_id={user_id} " )
            connection.commit()
        msg  = bot.send_message( user_id, "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥—Ä–∏—é", reply_markup= kb.kind_ex_keybord)
        bot.register_next_step_handler( msg, get_kind_of_act)
        #–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ BD –∑–Ω–∞—á–µ–Ω–∏–µ plat –∏ plong /|\
    except:
        if Location.text == "–ù–∞–∑–∞–¥":
            msg = bot.send_message ( user_id , "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é" , reply_markup=kb.mein_meny_keybord )
            bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
        else:
            msg = bot.send_message( user_id, "–û–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ–∂–∞–ª—É—Å—Ç–∞ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –∞ –Ω–µ —ç—Ç–æ!")
            bot.register_next_step_handler( msg, get_geopos)

def get_kind_of_act(message):
    text = message.text
    C = True
    user_id = message.chat.id
    with connection.cursor() as cursor:
        col = 0
        if text in actions:
            for i in actions:
                col += 1
                if text == i:
                    cursor.execute ( f"UPDATE `tbot` SET `groupa`={col} WHERE `user_id`={user_id}" )

        elif text == "–ù–∞–∑–∞–¥":
            C = False
            msg = bot.send_message ( user_id , "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é" , reply_markup=kb.mein_meny_keybord )
            bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
        else:
            C = False
            msg = bot.send_message(user_id, "–ù–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫", reply_markup= kb.kind_ex_keybord)
            bot.register_next_step_handler( msg, get_kind_of_act)
        if(C == True):
            msg = bot.send_message(user_id,"–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É / –ù–∞–ø—Ä–∏–º–µ—Ä: 18:00 04.10")
            bot.register_next_step_handler( msg, discr)
            connection.commit()

def discr(message):  #–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —ç—Ç–æ –≤—Ä–µ–º—è
    user_id = message.chat.id 
    text = message.text
    if '.' in text and ':' in text:
        with connection.cursor() as cursor:
            cursor.execute(f"UPDATE `tbot` SET `group_text`='{str(text)}', `group_reg`=1 WHERE `user_id`={user_id}")
            groupnum = execute(user_id, "group")
            cursor.execute ( f"SELECT `group` FROM `tbot` WHERE `group`={groupnum}" )
            qq = cursor.fetchall ()
            col = len(qq)
            connection.commit()
        msg = bot.send_message ( user_id , "–í—ã —Å–æ–∑–¥–∞–ª–∏ –≥—Ä—É–ø–ø—É. –í—Å–µ–≥–æ –≥—Ä—É–ø–ø –≤ –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ "+str(col), reply_markup=kb.wait_room ) #–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø –≤ –æ–¥–Ω–æ–º —Ä–∞–π–æ–Ω–µ
        bot.register_next_step_handler ( msg , group_wait )
    else:
        msg = bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å —Ç–∞–∫, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–µ / –ù–∞–ø—Ä–∏–º–µ—Ä: 18:00 04.10")
        bot.register_next_step_handler( msg, discr)

def group_wait(message):
    #  user –ö–æ–º–Ω–∞—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è, —á–µ–ª–æ–≤–µ–∫ –Ω–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∫—Ä–æ–º–µ –∫–∞–∫ —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É! –ï—Å–ª–∏ –∫—Ç–æ —Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –Ω–µ–º—É —Ç–æ –µ–≥–æ –æ–ø–æ–≤–µ—â–∞—é—Ç –æ–± —ç—Ç–æ–º
    user_id = message.chat.id
    text = message.text
    count = 0
    count = execute(user_id, "groupid")

    if text == "–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É":
        msg = bot.send_message( user_id, "–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É? –î–∞/–ù–µ—Ç")
        with connection.cursor() as cursor:
            cursor.execute(f"UPDATE tbot SET groupid = 1 WHERE user_id = {user_id}")
            connection.commit()
        bot.register_next_step_handler( msg, group_wait)

    elif text == "–î–∞" and count == 1:
        with connection.cursor() as cursor:
            cursor.execute(f"SELECT user_id FROM tbot WHERE groupid={user_id}")
            qq = cursor.fetchall()
            if qq != ():
                for i in qq:
                    for b,c in i.items():
                        cursor.execute(f"UPDATE `tbot` SET `groupid`=0, `group`=0, `groupa`=0, `plat`=NULL,`plong`=NULL WHERE `user_id`={c}")
                        msg = bot.send_message( c, "–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –µ—ë —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º",reply_markup=kb.mein_meny_keybord)
                        bot.register_next_step_handler(msg, reaction_mein_menu_buttons)
            cursor.execute(f"UPDATE `tbot` SET `group_reg`=0, `group`=NULL, `groupa`=NULL, `groupid`=0, `group_text`=NULL, `plat`=NULL, `plong`=NULL  WHERE `user_id`={user_id}")
            connection.commit()
            msg = bot.send_message( user_id, "–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –≥—Ä—É–ø–ø—É –∏ –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
            bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )

    elif text == "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤":
        with connection.cursor() as cursor:
            cursor.execute(f"SELECT user_id FROM tbot WHERE groupid={user_id}")
            qq = cursor.fetchall()
            print(qq)
            textl = "–í–∞—à —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:"
            names = execute(user_id , "name")
            surnames = execute(user_id, "surname")
            usernames = execute(user_id, "username")
            col = 1
            textl = textl + "\n" + str(col) + ". @" + str(usernames) + " " + str(names) + " " + str(surnames)

            if qq == ():
                msg = bot.send_message( user_id, "–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ")
            else:
                for i in qq:
                    for b,c in i.items():
                        col += 1
                        name = execute(c, "name")
                        surname = execute(c, "surname")
                        username = execute(c, "username")

                        textl = textl + "\n" + str(col) + ". @" + str(username) + " " + str(name) + " " + str(surname) + '\n'
                msg = bot.send_message( user_id, textl )
            bot.register_next_step_handler( msg, group_wait)
    elif count == 1 and text != "–î–∞" and text != "–ù–µ—Ç":
        msg = bot.send_message( user_id, "–í—ã –≤—Ä–æ–¥–µ —Ö–æ—Ç–µ–ª–∏ —É–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É. –ù–∞–ø–∏—à–∏—Ç–µ: –î–∞/–ù–µ—Ç ")
        bot.register_next_step_handler( msg, group_wait)
    elif count == 1 and text == "–ù–µ—Ç":
        with connection.cursor() as cursor:
            cursor.execute(f"UPDATE tbot SET groupid=0 WHERE user_id={user_id}")
            connection.commit()
        msg = bot.send_message( user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –º–µ–Ω—é –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã", reply_markup= kb.wait_room)
        bot.register_next_step_handler( msg, group_wait)
    else:
        msg = bot.send_message( user_id, "–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –≤—ã –æ—Ç –º–µ–Ω—è —Ö–æ—Ç–∏—Ç–µ", reply_markup= kb.wait_room)
        bot.register_next_step_handler( msg, group_wait)

#################################################################################################################
######################################### –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø—ã ##########################################################
#################################################################################################################

def find_group(user_id):
    msg = bot.send_message( user_id, "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ä–∞–π–æ–Ω (1/3)", reply_markup= kb.distr_keybord)
    bot.register_next_step_handler( msg, find_cat)

def find_cat(message):
    text = message.text
    user_id = message.chat.id
    if text in districts:
        with connection.cursor () as cursor :  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω
            col = 0
            for i in districts:
                col += 1
                if text == i:
                    cursor.execute ( f"UPDATE `tbot` SET `group`={col} WHERE `user_id`={user_id}" )
            connection.commit ()
        msg = bot.send_message( user_id, "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥—Ä—É–ø–ø—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–ª–∏–∂–µ –∫ –≤–∞–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é (2/3)")
        bot.register_next_step_handler( msg, geo_find)
    elif text == "–ù–∞–∑–∞–¥":
        msg = bot.send_message ( user_id , "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é" , reply_markup=kb.mein_meny_keybord )
        bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
    else:
        msg = bot.send_message( user_id, "–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ä–∞–π–æ–Ω–æ–≤", reply_markup= kb.distr_keybord)
        bot.register_next_step_handler( msg, find_cat)

def geo_find(Location):
    user_id = Location.chat.id
    try :
        loc = Location.location
        plong = Location.location.longitude
        plat = Location.location.latitude
        with connection.cursor () as cursor :
            cursor.execute ( f"UPDATE `tbot` SET `plong`={plong},`plat`={plat} WHERE `user_id`={user_id}" )
            connection.commit ()
        msg = bot.send_message ( user_id , "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ (3/3)" , reply_markup=kb.kind_ex_keybord )
        bot.register_next_step_handler ( msg , act_find )
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ BD –∑–Ω–∞—á–µ–Ω–∏–µ plat –∏ plong /|\
    except :
        if Location.text == "–ù–∞–∑–∞–¥":
            msg = bot.send_message ( user_id , "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é" , reply_markup=kb.mein_meny_keybord )
            bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
        else:
            msg = bot.send_message ( user_id , "–û–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ–∂–∞–ª—É—Å—Ç–∞ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –∞ –Ω–µ —ç—Ç–æ!" )
            bot.register_next_step_handler ( msg , geo_find )

def act_find(message):
    text = message.text
    C = True
    user_id = message.chat.id
    seachid = []
    texta = ""
    con = 0
    with connection.cursor () as cursor :
        col = 0
        if text in actions:
            for i in actions:
                col += 1
                if text == i:
                    cursor.execute ( f"UPDATE `tbot` SET `groupa`={col} WHERE `user_id`={user_id}" )
            
        elif text == "–ù–∞–∑–∞–¥" :
            C = False
            msg = bot.send_message ( user_id , "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é" , reply_markup=kb.mein_meny_keybord )
            bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
        else :
            C = False
            msg = bot.send_message ( user_id , "–ù–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫" , reply_markup=kb.kind_ex_keybord )
            bot.register_next_step_handler ( msg , get_kind_of_act )

        if C == True:
            group = execute(user_id,"group")
            groupa = execute(user_id, "groupa")
            plat = execute(user_id, "plat")
            plong = execute(user_id,"plong")
            cursor.execute ( f"SELECT `user_id` FROM `tbot` WHERE `group`={group} and `groupa`={groupa} and `group_reg`=1" )
            qq = cursor.fetchall ()
            for i in qq :
                for b , c in i.items () :
                    seachid.append ( c )
            if seachid == [ ] :
                msg = bot.send_message ( user_id ,"–í –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ –Ω–µ—Ç—É –≥—Ä—É–ø–ø—ã —Å —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π, –≤—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" , reply_markup=kb.mein_meny_keybord)
                bot.register_next_step_handler ( msg , reaction_mein_menu_buttons )
            else :
                for i in seachid :
                    print ( i )
                    name = execute(i, "name")
                    surname = execute(i,"surname")
                    con +=1
                    platid = execute(i, "plat")
                    plongid = execute(i,"plong")
                    grouptext = execute(i,"group_text")
                    #-----------------–í–´–ß–ò–°–õ–ï–ù–ò–Ø-----------------
                    delplong = plong - plongid
                    delplat = plat - platid
                    traectory = math.sqrt ( delplong ** 2 + delplat ** 2 )
                    traectory = traectory*10000
                    traectory = int(traectory)
                    #---------------------------------------------

                    texta = texta +str(con)+ ". " + str ( name ) + " " + str ( surname ) + " –≤ "+str(traectory)+" –º–µ—Ç—Ä–∞—Ö –æ—Ç –≤–∞—Å" + "\n–û–ø–∏—Å–∞–Ω–∏–µ: " + str(grouptext) + "\n"
                    msg = bot.send_message ( user_id , "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∫ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è:\n" + texta + "–ù–∞–ø—Ä–∏–º–µ—Ä: 1", reply_markup=kb.vbor)
                    bot.register_next_step_handler(msg, search)
            connection.commit()

def search(message):
    text = message.text
    user_id = message.chat.id
    seachid = []
    texta = ""
    C = False
    with connection.cursor() as cursor:
        group = execute(user_id, "group")
        groupa = execute(user_id, "groupa")
        plat = execute(user_id, "plat")
        plong = execute(user_id, "plong")
        name = execute(user_id,"name")
        surname = execute(user_id, "surname")

        cursor.execute(f"SELECT `user_id` FROM `tbot` WHERE `group`={group} and `groupa`={groupa} and `group_reg`=1")
        qq = cursor.fetchall()
        for i in qq:
            for b,c in i.items():
                seachid.append(c)
        print(seachid)
        if seachid == []:
            msg = bot.send_message( user_id, "–í –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ –Ω–µ—Ç—É –≥—Ä—É–ø–ø—ã —Å —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π, –≤—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
            bot.register_next_step_handler( msg, reaction_mein_menu_buttons)
            C = True
        elif text == "–ù–∞–∑–∞–¥":
            msg = bot.send_message( user_id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord )
            bot.register_next_step_handler( msg, reaction_mein_menu_buttons)
        else:
            if text.isdigit() == True:
                for i in seachid:
                    if seachid[int(text)-1] == i:
                        print("–í–´ –í–°–¢–£–ü–ò–õ–ò –í –ì–†–£–ü–ü–£")
                        cursor.execute(f"UPDATE `tbot` SET `groupid`={i} WHERE `user_id`={user_id}")
                        bot.send_message( i, name + " "+ surname + " –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª(—Å—è/–∞—Å—å) –∫ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ")
                        #-----–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å
                        namepar = execute(i,"name")
                        surnamepar = execute(i,"surname")
                        connection.commit()
                        C = True
                        #------------------------------------------------------------------

                        msg = bot.send_message( user_id, "–í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –≥—Ä—É–ø–ø—É –∫ " + namepar + " " + surnamepar, reply_markup=kb.invite_room)
                        bot.register_next_step_handler( msg, invite_room )
        if C == False:
            msg = bot.send_message( user_id, "–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ –∏–ª–∏ `–ù–∞–∑–∞–¥` —á—Ç–æ –±—ã –≤—ã–π—Ç–∏", reply_markup=kb.vbor)
            bot.register_next_step_handler( msg, search)

def invite_room(message):
    text = message.text
    user_id = message.chat.id
    texta = "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: \n"
    if text == "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤":
        with connection.cursor() as cursor:
            groupid = execute(user_id,"groupid")
            cursor.execute(f"SELECT `user_id` FROM `tbot` WHERE `groupid` = {groupid}")
            qq = cursor.fetchall()
            print(qq)
            for i in qq:
                for b,c in i.items():
                    con = c
                    col = 0
                    print(con)
                    name = execute(con, "name")
                    surname = execute(con, "surname")
                    username = execute(con, "username")
                    col += 1
                    texta = texta + str(col) + ". @"+ str(username) + " " + str(name) + " " + str(surname) + " \n"
            
            nameow = execute(groupid, "name")
            surnameow = execute(groupid, "surname")
            usernameoo = execute(groupid,"username")
            texta = texta + str(col+1)+". @"+ str(usernameoo)+ " " + str(nameow) + " " + str(surnameow)
            msg = bot.send_message( user_id, texta)
            bot.register_next_step_handler( msg, invite_room)

    elif text == "–ü–æ–∫–∏–Ω—É—Ç—å –≥—Ä—É–ø–ø—É":
        with connection.cursor() as cursor:
            name = execute(user_id, "name")
            surname = execute(user_id, "surname")
            groupid = execute(user_id, "groupid")
            cursor.execute(f"UPDATE `tbot` SET `groupid`=0,`group`=NULL,`groupa`=0,`plat`=NULL,`plong`=NULL WHERE user_id={user_id}")
            connection.commit()

        bot.send_message( groupid, name + " " + surname + " –≤—ã—à–µ–ª –∏–∑ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã")
        msg = bot.send_message( user_id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –≥—Ä—É–ø–ø—ã –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler( msg, reaction_mein_menu_buttons)
#########################################
if __name__ == '__main__' :
    bot.infinity_polling ()
