import sqlite3
import telebot
from telebot import types
import keyboards as kb
import  re
from config import token
from bot import Group,FG
conn = sqlite3.connect('server.db')
bot = telebot.TeleBot(token)
group = {}
fgroup = {}
grops = []
districts = ["–ó–∞–≤–æ–¥—Å–∫–æ–π", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "–°–æ–≤–µ—Ç—Å–∫–∏–π",
"–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π", "–ü–∞—Ä—Ç–∏–∑–∞–Ω—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π",
"–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"]
actions = ["üèÄ–ë–∞—Å–∫–µ—Ç–±–æ–ª","üèê–í–æ–ª–µ–π–±–æ–ª","‚öΩ–§—É—Ç–±–æ–ª","üèÉ–ë–µ–≥","üõº–†–æ–ª–∏–∫–∏","üö¥–í–µ–ª–æ—Å–∏–ø–µ–¥","üèã–í–æ—Ä–∫–∞—É—Ç"]
groupes = []
dis ={}
act ={}
for i in range(0,len(districts)):
    groupes.append([])
    dis[districts[i]] = i
    for j in range(0,len(actions)):
        groupes[i].append([])
for j in range(0,len(actions)):
    act[actions[j]] = j;


@bot.message_handler( commands=['start'])
def conn_main(message):
    user_id = message.chat.id
    print(message)
    with sqlite3.connect ('server.db') as conn :
        cursor = conn.cursor()
        p  = cursor.execute(f"SELECT user_id FROM tbot WHERE user_id = {user_id}").fetchone()

        print(p)
        if p!=None:
            msg = bot.send_message(user_id, "–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ? –î–∞/–ù–µ—Ç", reply_markup=kb.reg_yes_or_no)
            bot.register_next_step_handler(msg, yes_or_no)
            #conn.close()
        else:
            msg = bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç, —è sport_bot. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –∑–∞–Ω—è—Ç–∏—è —Å–ø–æ—Ä—Ç–æ–º. –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏—à—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'. –î–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π, –≤—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å username. –ï—Å–ª–∏ —É –≤–∞—Å –µ–≥–æ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–π—Ç–µ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è.", reply_markup=kb.reg_keyboard)
            bot.register_next_step_handler(msg, get_reg)
            #conn.close()


def yes_or_no(message):
    user_id = message.chat.id
    if "–î–∞" in message.text:
        msg = bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é ( –∫ –ø—Ä–∏–º–µ—Ä—É: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω )")
        bot.register_next_step_handler(msg, get_name)
    elif  "–ù–µ—Ç" in message.text:
        msg = bot.send_message(user_id, "–í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)
    else:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ '–î–∞/–ù–µ—Ç'")
        bot.register_next_step_handler(msg, yes_or_no)

def get_reg(message):
    user_id = message.chat.id
    if str(message.content_type) != "text":
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'.", reply_markup=kb.reg_keyboard)
        bot.register_next_step_handler(msg,get_reg)
    elif message.text != '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        msg = bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'.", reply_markup=kb.reg_keyboard)
        bot.register_next_step_handler(msg, get_reg)
    else:
        msg = bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é ( –∫ –ø—Ä–∏–º–µ—Ä—É: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω )")
        bot.register_next_step_handler(msg,get_name)

def get_name(message):
    user_id = message.chat.id
    username = message.chat.username
    if str(message.content_type) != "text":
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        bot.register_next_step_handler(msg, get_name)
    elif re.findall(r'\d', message.text) != [] or (' ' in message.text)==False :
        msg = bot.send_message(user_id, "–í –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª–Ω—ã–µ")
        bot.register_next_step_handler(msg, get_name)
    else:
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            if cursor.execute(f"""SELECT user_id FROM tbot WHERE user_id = {user_id}""").fetchone() != None:
                cursor.execute(f"""UPDATE tbot SET name = '{message.text}'""")
            else:
                cursor.execute(f"""INSERT INTO tbot (user_id,name,username) VALUES ({user_id},'{message.text}','{username}')""")
            conn.commit()
        msg = bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)

@bot.message_handler( commands = [ 'menu'])
def mein_menu(message):
    user_id = message.chat.id
    if(str(message.content_type)!='text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg,mein_menu)
    elif '–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É' in message.text:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏ (1/4)\ –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ: –ù–∞–∑–∞–¥", reply_markup=kb.distr_keybord)
        bot.register_next_step_handler(msg, get_dist)
    elif '–ù–∞–π—Ç–∏ –≥—Ä—É–ø–ø—É' in message.text:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –≥—Ä—É–ø–ø—É (1/3)", reply_markup=kb.distr_keybord)
        bot.register_next_step_handler(msg, find_dist)
    elif '/start'== message.text:
        conn_main(message)
    else:
        msg = bot.send_message(user_id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)

#######–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã########

def get_dist(message):
    user_id = message.chat.id
    if(str(message.content_type)!='text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.distr_keybord)
        bot.register_next_step_handler(msg, get_dist)
    elif message.text in districts:
        gp = Group(user_id)
        gp.distr = message.text
        group[user_id] = gp
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≥—Ä—É–ø–ø—ã(2/4)", reply_markup=kb.kind_ex_keybord)
        bot.register_next_step_handler(msg,get_kind)
    elif message.text=='–ù–∞–∑–∞–¥':
        msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg,mein_menu)
    else:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö", reply_markup=kb.distr_keybord)
        bot.register_next_step_handler(msg, get_dist)

def get_kind(message):
    user_id = message.chat.id
    if (str(message.content_type) != 'text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.kind_ex_keybord)
        bot.register_next_step_handler(msg, get_kind)
    elif message.text in actions:
        group[user_id].kind = message.text
        msg = bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏(3/4)", reply_markup=kb.vbor)
        bot.register_next_step_handler(msg, get_geo)
    elif message.text == '–ù–∞–∑–∞–¥':
        msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)
    else:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥—Ä–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö", reply_markup=kb.kind_ex_keybord)
        bot.register_next_step_handler(msg, get_kind)

def get_geo(location):
    user_id = location.chat.id
    if (str(location.content_type) != 'location'):
        if(location.text=='–ù–∞–∑–∞–¥'):
            msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
            bot.register_next_step_handler(msg, mein_menu)
        else:
            msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é.")
            bot.register_next_step_handler(msg, get_geo)
    else:
        Plong = location.location.longitude
        Plat = location.location.latitude
        group[user_id].plat = Plat
        group[user_id].plong = Plong
        msg = bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã(–ê–¥—Ä–µ—Å,–≤—Ä–µ–º—è,–¥–∞—Ç—É –∏ —Ç.–¥)(4/4)", reply_markup=kb.vbor)
        bot.register_next_step_handler(msg, get_opis)

def get_opis(message):
    user_id = message.chat.id
    if (str(message.content_type) != 'text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        bot.register_next_step_handler(msg, get_opis)
    elif message.text == '–ù–∞–∑–∞–¥':
        msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)
    else:
        group[user_id].opis = message.text
        gp = group[user_id]
        n1 = dis[str(gp.distr)]
        n2 = act[str(gp.kind)]
        groupes[n1][n2].append(gp.groupid)
        print(groupes)
        del group[user_id]
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""INSERT INTO groups (groupid,distr,kind,plat,plong,opis) VALUES ({gp.groupid},'{gp.distr}','{gp.kind}',{gp.plat},{gp.plong},'{gp.opis}')""")
            cursor.execute(f"""UPDATE tbot SET groupid = {user_id} WHERE user_id={user_id}""")
            conn.commit()
        msg = bot.send_message(user_id, "–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞. –í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –ª–æ–±–±–∏ –≥—Ä—É–ø–ø—ã.", reply_markup=kb.wait_room)
        bot.register_next_step_handler(msg,group_wait)

def group_wait(message):
    user_id = message.chat.id
    print(message.text)
    if (str(message.content_type) != 'text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.wait_room)
        bot.register_next_step_handler(msg, group_wait)
    elif message.text == "üìÉ–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤":
        mas = "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: "
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT name,username FROM tbot WHERE groupid = {user_id}""")
            qq = cursor.fetchall()
            if len(qq) == 1:
                msg = bot.send_message(user_id, "–ö –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ –µ—â–µ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è", reply_markup=kb.wait_room)
                bot.register_next_step_handler(msg,group_wait)
            else:
                col = 0
                for a,b in qq:
                    col += 1
                    mas = mas + "\n" + str(col) + ". " + str(a) +" @"+  str(b)
                msg = bot.send_message(user_id,mas,reply_markup=kb.wait_room)
                bot.register_next_step_handler(msg, group_wait)
    elif message.text == "‚ùå–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É":

        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT distr,kind FROM groups WHERE groupid = {user_id}""")
            qq = cursor.fetchall()
            for a in qq:
                n1 = dis[str(a[0])]
                n2 = act[str(a[1])]
                groupes[n1][n2].remove(user_id)
            print(groupes)
            cursor.execute(f"""SELECT user_id FROM tbot WHERE groupid = {user_id}""")
            qq = cursor.fetchall()
            for a in qq:
                print(a[0])
                cursor.execute(f"UPDATE tbot SET groupid=NULL WHERE user_id = {a[0]}")
                msg = bot.send_message(a[0],"–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞, –≤—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
                bot.register_next_step_handler(msg,mein_menu)
            cursor.execute(f"""DELETE FROM groups WHERE groupid={user_id}""")
            conn.commit()
    else:
        msg = bot.send_message(user_id,"–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—Å")
        bot.register_next_step_handler(msg,group_wait)

#########–ü–û–ò–°–ö –ì–†–£–ü–ü–´#########

def find_dist(message):
    user_id = message.chat.id
    if (str(message.content_type) != 'text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.distr_keybord)
        bot.register_next_step_handler(msg, find_dist)
    elif message.text in districts:
        gp = FG(user_id)
        gp.distr = message.text
        fgroup[user_id] = gp
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥—Ä–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ –≥—Ä—É–ø–ø—ã(2/3)", reply_markup=kb.kind_ex_keybord)
        bot.register_next_step_handler(msg, find_kind)
    elif message.text == '–ù–∞–∑–∞–¥':
        msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)
    else:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö", reply_markup=kb.distr_keybord)
        bot.register_next_step_handler(msg, find_dist)

def find_kind(message):
    user_id = message.chat.id
    if (str(message.content_type) != 'text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.kind_ex_keybord)
        bot.register_next_step_handler(msg, find_kind)
    elif message.text in actions:
        fgroup[user_id].kind = message.text
        msg = bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, —á—Ç–æ–±—ã —è —Ä–∞—Å—Å—á–∏—Ç–∞–ª –ø—Ä–∏–º–µ—Ä–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏(3/3)", reply_markup=kb.vbor)
        bot.register_next_step_handler(msg, find_geo)
    elif message.text == '–ù–∞–∑–∞–¥':
        msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)
    else:
        msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö", reply_markup=kb.kind_ex_keybord)
        bot.register_next_step_handler(msg, find_kind)

def find_geo(location):
    user_id = location.chat.id
    if (str(location.content_type) != 'location'):
        if(location.text=='–ù–∞–∑–∞–¥'):
            msg = bot.send_message(user_id, "–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
            bot.register_next_step_handler(msg, mein_menu)
        else:
            msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é.")
            bot.register_next_step_handler(msg, find_geo)
    else:
        Plong = location.location.longitude
        Plat = location.location.latitude
        fgroup[user_id].plat = Plat
        fgroup[user_id].plong = Plong

        n1 = dis[str(fgroup[user_id].distr)]
        n2 = act[str(fgroup[user_id].kind)]
        if len(groupes[n1][n2]) == 0:
            msg = bot.send_message(user_id, "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –≥—Ä—É–ø–ø –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", reply_markup=kb.mein_meny_keybord)
            bot.register_next_step_handler(msg,mein_menu)
        else:
            bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é")
            send_mes(user_id,0,n1,n2)

def send_mes(user_id,pos,n1,n2):
    ln = len(groupes[n1][n2])
    if pos>=ln:
        bot.send_message(user_id,"–ì—Ä—É–ø–ø—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –ø—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–º –ø–æ–∏—Å–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å —É–∂–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã")
        pos = 0
    groupid = groupes[n1][n2][pos]
    mas = ""
    with sqlite3.connect('server.db') as conn:
        cursor = conn.cursor()
        cursor.execute( f"SELECT opis,plat,plong FROM groups WHERE groupid = {groupid}")
        qq = cursor.fetchone()
        cursor.execute( f"SELECT username,name FROM tbot WHERE user_id = {groupid}")
        bq = cursor.fetchone()
        print(qq)
        print(bq)
        mas+='@'+bq[0]+' '+bq[1]+'\n'+"–û–ø–∏—Å–∞–Ω–∏–µ: \n"+qq[0]
        bot.send_message(user_id, mas)
        bot.send_location(user_id, qq[1], qq[2], reply_markup=make_kb(groupid))

def make_kb(user_id):
    ikb = types.InlineKeyboardMarkup()
    ib1 = types.InlineKeyboardButton(text='–í–æ–π—Ç–∏', callback_data=str(user_id))
    ib2 = types.InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data='d')
    ib3 = types.InlineKeyboardButton(text='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='m')
    ikb.add(ib1,ib2).add(ib3)
    return ikb

@bot.callback_query_handler(func =lambda call: True)
def get_call(call):
    user_id = call.message.chat.id
    if 'm' in call.data:
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT groupid FROM tbot WHERE user_id={user_id}""")
            a = cursor.fetchone()
            if a[0] != None:
                msg = bot.send_message(user_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å",reply_markup=kb.invite_room)
                return 
        msg=  bot.send_message(user_id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg,mein_menu)
    elif 'd' in call.data:
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT groupid FROM tbot WHERE user_id={user_id}""")
            a = cursor.fetchone()
            if a[0] != None:
                msg = bot.send_message(user_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å", reply_markup=kb.invite_room)
                return
        fgroup[user_id].pos+=1
        n1 = dis[str(fgroup[user_id].distr)]
        n2 = act[str(fgroup[user_id].kind)]
        send_mes(user_id,fgroup[user_id].pos,n1,n2)
    else:
        groupid = int(call.data)

        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT groupid FROM tbot WHERE user_id={user_id}""")
            a = cursor.fetchone()
            if a[0] != None:
                msg = bot.send_message(user_id, "–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥—Ä—É–ø–ø–µ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ",reply_markup=kb.invite_room)
                return
            else:
                cursor.execute(f"""SELECT groupid FROM groups WHERE groupid={groupid}""")
                b = cursor.fetchone()
                if b != []:
                    cursor.execute(f"""SELECT username,name FROM tbot WHERE user_id={groupid}""")
                    qq = cursor.fetchone()
                    cursor.execute(f"""SELECT username,name FROM tbot WHERE user_id={user_id}""")
                    qb = cursor.fetchone()
                    cursor.execute(f"""SELECT user_id FROM tbot WHERE groupid={groupid}""")
                    qp = cursor.fetchall()
                    cursor.execute(f"""UPDATE tbot SET groupid = {groupid} WHERE user_id={user_id}""")
                    conn.commit()
                    for a in qp:
                        bot.send_message(a[0],'@'+qb[0]+' '+qb[1]+' –≤–æ—à–µ–ª –≤ –≥—Ä—É–ø–ø—É')
                    msg = bot.send_message(user_id,'–í—ã –≤–æ—à–ª–∏ –≤ –≥—Ä—É–ø–ø—É –∫ ' + '@' + qq[0]+' '+qq[1],reply_markup=kb.invite_room)
                    bot.register_next_step_handler(msg,invite_room)
                else:
                    msg = bot.send_message(user_id, "–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã —É–∂–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.mein_meny_keybord)
                    bot.register_next_step_handler(msg,mein_menu)

def invite_room(message):
    user_id = message.chat.id
    if (str(message.content_type) != 'text'):
        msg = bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", reply_markup=kb.invite_room)
        bot.register_next_step_handler(msg, invite_room)
    elif message.text=="üìÉ–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤":
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT groupid FROM tbot WHERE user_id = {user_id}""")
            qb = cursor.fetchone()
            groupid = qb[0]
            cursor.execute(f"""SELECT name,username FROM tbot WHERE groupid = {groupid}""")
            qq = cursor.fetchall()
            col = 0
            mas = ""
            for a, b in qq:
                col += 1
                mas = mas + "\n" + str(col) + ". " + str(a) + " @" + str(b)
            msg = bot.send_message(user_id, mas, reply_markup=kb.invite_room)
            bot.register_next_step_handler(msg, invite_room)
    elif message.text=="‚ùå–ü–æ–∫–∏–Ω—É—Ç—å –≥—Ä—É–ø–ø—É":
        with sqlite3.connect('server.db') as conn:
            cursor = conn.cursor()
            cursor.execute(f"""SELECT groupid FROM tbot WHERE user_id ={user_id}""")
            qq = cursor.fetchone()
            groupid = qq[0]
            cursor.execute(f"""UPDATE tbot SET groupid = NULL WHERE user_id={user_id}""")
            cursor.execute(f"""SELECT user_id FROM tbot WHERE groupid ={groupid}""")
            qp = cursor.fetchall()
            cursor.execute(f"""SELECT username,name FROM tbot WHERE user_id ={user_id}""")
            qb = cursor.fetchone()
            del fgroup[user_id]
            conn.commit()
            for a in qp:
                bot.send_message(a[0],'@'+qb[0]+' '+qb[1]+' –≤—ã—à–µ–ª –∏–∑ –≥—Ä—É–ø–ø—ã')
        msg = bot.send_message(user_id, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –≥—Ä—É–ø–ø—ã",reply_markup=kb.mein_meny_keybord)
        bot.register_next_step_handler(msg, mein_menu)
    else:
        msg = bot.send_message(user_id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫", reply_markup=kb.invite_room)
        bot.register_next_step_handler(msg, invite_room)






if __name__ == '__main__':
    bot.infinity_polling()